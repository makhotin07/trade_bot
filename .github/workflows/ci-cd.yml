name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint Code
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
        pip install -r requirements.txt
    
    - name: Check code formatting with Black
      run: black --check src/ tests/ || true
    
    - name: Check import sorting with isort
      run: isort --check-only src/ tests/ || true
    
    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics || true
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics || true
    
    - name: Type check with mypy
      run: |
        export PYTHONPATH=${{ github.workspace }}/src:$PYTHONPATH
        mypy src/ --ignore-missing-imports || true

  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        export PYTHONPATH=${{ github.workspace }}/src:$PYTHONPATH
        pytest tests/ -v --cov=src/bytbit_trading_bot || true

  deploy:
    needs: [lint, test]
    runs-on: ubuntu-latest
    name: Deploy to Server
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Add server to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'DEPLOY_EOF'
          set -e
          cd ${{ secrets.SERVER_PATH }} || {
            echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º..."
            mkdir -p ${{ secrets.SERVER_PATH }}
            cd ${{ secrets.SERVER_PATH }}
          }
          
          echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
          if [ ! -d ".git" ]; then
            echo "üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
            git init
            git branch -M master
            git remote add origin https://github.com/makhotin07/trade_bot.git || git remote set-url origin https://github.com/makhotin07/trade_bot.git
          else
            echo "‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
            git remote set-url origin https://github.com/makhotin07/trade_bot.git || git remote add origin https://github.com/makhotin07/trade_bot.git || true
          fi
          
          echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ GitHub..."
          
          # ‚ö†Ô∏è –í–ê–ñ–ù–û: –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
          if [ -d "data" ]; then
            echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –¥–∞–Ω–Ω—ã—Ö..."
            cp -r data data_backup_$(date +%Y%m%d_%H%M%S) || echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é"
            echo "‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã"
          fi
          
          # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HTTPS
          git remote set-url origin https://github.com/makhotin07/trade_bot.git || true
          
          # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã –∏–∑ .gitignore (data/, my_session.session –∏ —Ç.–¥.)
          # –≠—Ç–∏ —Ñ–∞–π–ª—ã –Ω–µ –±—É–¥—É—Ç –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã git pull, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –≤ .gitignore
          git fetch origin master || {
            echo "‚ö†Ô∏è  Fetch –Ω–µ —É–¥–∞–ª—Å—è"
            exit 1
          }
          
          # –ò—Å–ø–æ–ª—å–∑—É–µ–º merge —Å --no-commit —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
          git merge origin/master --no-commit --no-edit || {
            # –ï—Å–ª–∏ merge –Ω–µ —É–¥–∞–ª—Å—è, –ø—Ä–æ–±—É–µ–º reset –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            echo "‚ö†Ô∏è  Merge –Ω–µ —É–¥–∞–ª—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º reset –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ..."
            git reset --hard origin/master || {
              echo "‚ö†Ô∏è  Reset –Ω–µ —É–¥–∞–ª—Å—è, –æ—Ç–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è"
              git merge --abort 2>/dev/null || true
            }
          }
          
          # –ï—Å–ª–∏ merge –±—ã–ª —Å --no-commit, –∑–∞–≤–µ—Ä—à–∞–µ–º –µ–≥–æ
          if [ -n "$(git status --porcelain | grep -v '^??')" ]; then
            git commit --no-edit || echo "‚ö†Ô∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
          fi
          
          # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é data, –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞
          if [ ! -d "data" ]; then
            echo "‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
            BACKUP_DIR=$(ls -td data_backup_* 2>/dev/null | head -1)
            if [ -n "$BACKUP_DIR" ] && [ -d "$BACKUP_DIR" ]; then
              cp -r "$BACKUP_DIR" data
              echo "‚úÖ –î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ $BACKUP_DIR"
            else
              echo "‚ö†Ô∏è  –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
              mkdir -p data
            fi
          fi
          
          # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è data —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞
          mkdir -p data
          chmod 755 data || true
          
          echo "‚úÖ –ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω. –¢–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç:"
          git log --oneline -1 || echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–º–∏—Ç"
          
          echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
          if [ -d ".venv" ]; then
            source .venv/bin/activate
          elif [ -d "venv" ]; then
            source venv/bin/activate
          else
            echo "‚ö†Ô∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Å–æ–∑–¥–∞–µ–º..."
            python3 -m venv .venv
            source .venv/bin/activate
          fi
          
          pip install -r requirements.txt --upgrade --quiet || {
            echo "‚ö†Ô∏è  –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
          }
          
          echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
          if systemctl is-active --quiet bytbit-bot.service 2>/dev/null; then
            systemctl restart bytbit-bot.service
            echo "‚úÖ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ systemd"
          else
            echo "‚ö†Ô∏è  –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: systemctl start bytbit-bot.service"
          fi
          
          echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        DEPLOY_EOF
