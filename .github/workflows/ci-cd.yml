name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint Code
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
        pip install -r requirements.txt
    
    - name: Check code formatting with Black
      run: black --check src/ tests/ || true
    
    - name: Check import sorting with isort
      run: isort --check-only src/ tests/ || true
    
    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics || true
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics || true
    
    - name: Type check with mypy
      run: |
        export PYTHONPATH=${{ github.workspace }}/src:$PYTHONPATH
        mypy src/ --ignore-missing-imports || true

  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        export PYTHONPATH=${{ github.workspace }}/src:$PYTHONPATH
        pytest tests/ -v --cov=src/bytbit_trading_bot || true

  deploy:
    needs: [lint, test]
    runs-on: ubuntu-latest
    name: Deploy to Server
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Add server to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          set -e
          cd ${{ secrets.SERVER_PATH }} || exit 1
          
          echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ GitHub..."
          # –ò—Å–ø–æ–ª—å–∑—É–µ–º HTTPS –¥–ª—è git pull (GitHub Actions –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø)
          git remote set-url origin https://github.com/makhotin07/trade_bot.git || true
          git pull origin master || git pull origin main || echo "‚ö†Ô∏è  Git pull –Ω–µ —É–¥–∞–ª—Å—è, –Ω–æ –ø—Ä–æ–µ–∫—Ç —É–∂–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
          
          echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
          if [ -d ".venv" ]; then
            source .venv/bin/activate
          elif [ -d "venv" ]; then
            source venv/bin/activate
          fi
          
          pip install -r requirements.txt --upgrade --quiet
          
          echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
          if systemctl is-active --quiet bytbit-bot.service 2>/dev/null; then
            systemctl restart bytbit-bot.service
            echo "‚úÖ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ systemd"
          elif [ -f "scripts/restart.sh" ]; then
            bash scripts/restart.sh
            echo "‚úÖ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç"
          else
            echo "‚ö†Ô∏è  –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: python main.py"
          fi
          
          echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        EOF
