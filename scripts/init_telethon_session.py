#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telethon
–ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    cd /root/trade_bot
    source .venv/bin/activate
    python3 scripts/init_telethon_session.py
    
    –ò–ª–∏ –Ω–∞–ø—Ä—è–º—É—é:
    .venv/bin/python3 scripts/init_telethon_session.py
"""
import sys
import os
import asyncio

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
script_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.dirname(script_dir)

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(project_root, 'src'))

from telethon import TelegramClient
from bytbit_trading_bot.config import API_ID, API_HASH, SESSION_NAME, CHANNEL


async def init_telethon_session():
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç Telethon —Å–µ—Å—Å–∏—é —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤–≤–æ–¥
    """
    if not API_ID or not API_HASH:
        print("‚ùå –û—à–∏–±–∫–∞: API_ID –∏–ª–∏ API_HASH –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ config.py")
        return
    
    print("=" * 60)
    print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Telethon")
    print("=" * 60)
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –û–î–ò–ù –†–ê–ó –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏.")
    print("–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–µ—Å—Å–∏—è –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª my_session.session")
    print("")
    print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –î–ª—è —á—Ç–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ –ù–û–ú–ï–† –¢–ï–õ–ï–§–û–ù–ê!")
    print("   –ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ 'Please enter your phone (or bot token):'")
    print("   –í–≤–µ–¥–∏—Ç–µ –ù–û–ú–ï–† –¢–ï–õ–ï–§–û–ù–ê (–Ω–∞–ø—Ä–∏–º–µ—Ä: +79991234567), –∞ –ù–ï —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!")
    print("   –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç —á–∏—Ç–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–∞.")
    print("=" * 60)
    print("")
    
    # –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç
    client = TelegramClient(SESSION_NAME, API_ID, API_HASH)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        await client.start()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        me = await client.get_me()
        
        if me.bot:
            print("‚ùå –û–®–ò–ë–ö–ê: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –∫–∞–∫ –±–æ—Ç!")
            print("   –£–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª my_session.session –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
            print("   –ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≤–≤–µ–¥–∏—Ç–µ –ù–û–ú–ï–† –¢–ï–õ–ï–§–û–ù–ê, –∞ –Ω–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!")
            return
        
        print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {me.first_name} (@{me.username})")
        print(f"üì± –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–∞–Ω–∞–ª—É {CHANNEL}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É
        try:
            entity = await client.get_entity(CHANNEL)
            print(f"‚úÖ –ö–∞–Ω–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω: {entity.title}")
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É: {e}")
        
        print("\n‚úÖ –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
        print("   –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞ —á–µ—Ä–µ–∑ systemd:")
        print("   systemctl start bytbit-bot.service")
        
    except KeyboardInterrupt:
        print("\n\n‚úÖ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞ —á–µ—Ä–µ–∑ systemd.")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
    finally:
        await client.disconnect()


if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
    if not hasattr(sys, 'real_prefix') and not (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix):
        venv_path = os.path.join(project_root, '.venv')
        if os.path.exists(venv_path):
            print("‚ö†Ô∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ!")
            print(f"   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: source {venv_path}/bin/activate")
            print("   –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: .venv/bin/python3 scripts/init_telethon_session.py")
            print("")
    
    try:
        asyncio.run(init_telethon_session())
    except KeyboardInterrupt:
        print("\n\n‚úÖ –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)

